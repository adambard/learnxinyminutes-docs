---
language: markdown
contributors:
    - ["Dan Turkel", "http://danturkel.com/"]
translators:
    - ["Fangzhou Chen","https://github.com/FZSS"]
filename: learnmarkdown-cn.md
lang: zh-cn
---

Markdown 由 John Gruber 于 2004年创立. 它旨在成为一门容易读写的语法结构，并可以便利地转换成 HTML（以及其他很多）格式。

欢迎您多多反馈以及分支和请求合并。


```markdown
<!-- Markdown 是 HTML 的父集，所以任何 HTML 文件都是有效的 Markdown。
这意味着我们可以在 Markdown 里使用任何 HTML 元素，比如注释元素，
且不会被 Markdown 解析器所影响。不过如果你在 Markdown 文件内创建了 HTML 元素，
你将无法在 HTML 元素的内容中使用 Markdown 语法。-->

<!-- 在不同的解析器中，Markdown 的实现方法有所不同。
此教程会指出当某功能是否通用及是否只对某一解析器有效。 -->

<!-- 标头 -->
<!-- 通过在文本前加上不同数量的hash(#), 你可以创建相对应的 <h1> 
到 <h6> HTML元素。-->

# 这是一个 <h1>
## 这是一个 <h2>
### 这是一个 <h3>
#### 这是一个 <h4>
##### 这是一个 <h5>
###### 这是一个 <h6>

<!-- 对于 <h1> 和 <h2> 元素，Markdown 额外提供了两种添加方式。 -->
这是一个 h1
=============

这是一个 h2
-------------

<!-- 简易文本样式 -->
<!-- 文本的斜体，粗体，和删除线在 Markdown 中可以轻易地被实现。-->

*此文本为斜体。*
_此文本也是。_

**此文本为粗体。**
__此文本也是__

***此文本是斜体加粗体。***
**_或者这样。_**
*__这个也是！__*

<!-- 在 GitHub 采用的 Markdown 中 -->

~~此文本为删除线效果。~~

<!-- 单个段落由一句或多句邻近的句子组成，这些句子由一个或多个空格分隔。-->

这是第一段落. 这句话在同一个段落里，好玩么？

现在我是第二段落。
这句话也在第二段落！

这句话在第三段落！

<!-- 如果你插入一个 HTML中的<br />标签，你可以在段末加入两个以上的空格，
然后另起一段。-->

此段落结尾有两个空格（选中以显示）。  

上文有一个 <br /> ！

<!-- 段落引用可由 > 字符轻松实现。-->

> 这是一个段落引用. 你可以
> 手动断开你的句子，然后在每句句子前面添加 “>” 字符。或者让你的句子变得很长，以至于他们自动得断开。
> 只要你的文字以“>” 字符开头，两种方式无异。

> 你也对文本进行
>> 多层引用
> 这多机智啊！

<!-- 序列 -->
<!-- 无序序列可由星号，加号或者减号来建立 -->

* 项目
* 项目
* 另一个项目

或者

+ 项目
+ 项目
+ 另一个项目

或者 

- 项目
- 项目
- 最后一个项目

<!-- 有序序列可由数字加点来实现 -->

1. 项目一
2. 项目二
3. 项目三

<!-- 即使你的标签数字有误，Markdown 依旧会呈现出正确的序号，
不过这并不是一个好主意-->

1. 项目一
1. 项目二
1. 项目三
<!-- (此段与前例一模一样) -->

<!-- 你也可以使用子序列 -->

1. 项目一
2. 项目二
3. 项目三
    * 子项目
    * 子项目
4. 项目四

<!-- 代码段落 -->
<!-- 代码段落（HTML中 <code>标签）可以由缩进四格（spaces）
或者一个制表符（tab）实现-->

    This is code
    So is this

<!-- 在你的代码中，你仍然使用tab可以进行缩进操作 -->

    my_array.each do |item|
        puts item
    end

<!-- 内联代码可由反引号 ` 实现 -->

John 甚至不知道 `go_to()` 方程是干嘛的!

<!-- 在GitHub的 Markdown中，对于代码你可以使用特殊的语法 -->

\`\`\`ruby <!-- 插入时记得移除反斜线， 仅留```ruby ！ -->
def foobar
    puts "Hello world!"
end
\`\`\` <!-- 这里也是，移除反斜线，仅留 ``` -->

<!-- 以上代码不需要缩进，而且 GitHub 会根据```后表明的语言来进行语法高亮 -->

<!-- 水平线 （<hr />） -->
<!-- 水平线可由三个或以上的星号或者减号创建，可带可不带空格。 -->

***
---
- - - 
****************

<!-- 链接 -->
<!-- Markdown 最棒的地方就是简易的链接制作。链接文字放在中括号[]内，
在随后的括弧()内加入url。-->

[点我点我!](http://test.com/)

<!-- 你也可以为链接加入一个标题：在括弧内使用引号 -->

[点我点我!](http://test.com/ "连接到Test.com")

<!-- 相对路径也可以有 -->

[去 music](/music/).

<!-- Markdown同样支持引用样式的链接 -->

[点此链接][link1]以获取更多信息！
[看一看这个链接][foobar] 如果你愿意的话.

[link1]: http://test.com/ "Cool!"
[foobar]: http://foobar.biz/ "Alright!"

<!-- 链接的标题可以处于单引号中，括弧中或是被忽略。引用名可以在文档的任意何处，
并且可以随意命名，只要名称不重复。-->

<!-- “隐含式命名” 的功能可以让链接文字作为引用名 -->

[This][] is a link.

[this]: http://thisisalink.com/

<!-- 但这并不常用 -->

<!-- 图像 -->
<!-- 图像与链接相似，只需在前添加一个感叹号 -->

![这是我图像的悬停文本(alt text)](http://imgur.com/myimage.jpg "可选命名")

<!-- 引用样式也同样起作用 -->

![这是我的悬停文本.][myimage]

[myimage]: relative/urls/cool/image.jpg "在此输入标题"

<!-- 杂项 -->
<!-- 自动链接 -->

<http://testwebsite.com/> 与
[http://testwebsite.com/](http://testwebsite.com/) 等同

<!-- 电子邮件的自动链接 -->

<foo@bar.com>

<!-- 转义字符 -->

我希望 *将这段文字置于星号之间* 但是我不希望它被
斜体化, 所以我就: \*这段置文字于星号之间\*。

<!-- 表格 -->
<!-- 表格只被 GitHub 的 Markdown 支持，并且有一点笨重，但如果你真的要用的话: -->

| 第一列        | 第二列    | 第三列       |
| :----------   | :------:  | ----------:  |
| 左对齐        | 居个中    | 右对齐       |
| 某某某        | 某某某    | 某某某       |

<!-- 或者, 同样的 -->

第一列 | 第二列 | 第三列
:-- | :-: | --:
这太丑了 | 药不能 | 停

<!-- 结束! -->

```

更多信息, 请于[此处](http://daringfireball.net/projects/Markdown/syntax)参见 John Gruber 关于语法的官方帖子，及于[此处](https://github.com/adam-p/Markdown-here/wiki/Markdown-Cheatsheet) 参见 Adam Pritchard 的摘要笔记。
