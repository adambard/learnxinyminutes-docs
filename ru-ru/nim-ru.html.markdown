---
language: Nim
filename: learnNim-ru.nim
contributors:
    - ["Jason J. Ayala P.", "http://JasonAyala.com"]
    - ["Dennis Felsing", "https://dennis.felsing.org"]
translators:
    - ["Nomadic", "https://github.com/n0madic"]
    - ["dvska", "https://github.com/dvska"]
lang: ru-ru
---

Nim (—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π, –∫–∞–∫ Nimrod) ‚Äî —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π
—Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω—ã–π, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π,
—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –æ–±–æ–±—â—ë–Ω–Ω—ã–π —Å—Ç–∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

Nim —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–π –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π.

```nim
var                    # –û–±—ä—è–≤–ª–µ–Ω–∏–µ (–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ) –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö,
  –±—É–∫–≤–∞: char = 'n'    # —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞ –∏–ª–∏ –±–µ–∑
  —è–∑—ã–∫ = "N" & "im"
  nLength : int = len(—è–∑—ã–∫)
  boat: float
  –ø—Ä–∞–≤–¥–∞: bool = false

let              # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ let *—Å—Ä–∞–∑—É* –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.
  –Ω–æ–≥–∏ = 400     # –Ω–æ–≥–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π.
  —Ä—É–∫–∏ = 2_000   # –°–∏–º–≤–æ–ª _ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –∏ —É–¥–æ–±–µ–Ω –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —á–∏—Å–µ–ª.
  –ø–æ—á—Ç–∏–ü–∏ = 3.15

const            # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç
  debug = true   # –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–ª–µ–∑–Ω–æ –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö —ç—Ç–∞–ø–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
  –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å–ü–ª–æ—Ö–æ–π–ö–æ–¥ = false

when –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å–ü–ª–æ—Ö–æ–π–ö–æ–¥:    # `when` —ç—Ç–æ `if` —ç—Ç–∞–ø–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
  –Ω–æ–≥–∏ = –Ω–æ–≥–∏ + 1               # –≠—Ç–∞ –æ—à–∏–±–∫–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–∞.
  const –≤–≤–æ–¥ = readline(stdin)  # –ó–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–∑–≤–µ—Å—Ç–Ω—ã –≤–æ
                                # –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

discard 1 > 2 # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –±—É–¥–µ—Ç –∂–∞–ª–æ–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              # –≤—ã—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. `discard` –æ–±—Ö–æ–¥–∏—Ç —ç—Ç–æ.

discard """
–≠—Ç–æ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
–ò–ª–∏ –¥–ª—è –Ω–µ –ø–æ–¥–¥–∞—é—â–µ–≥–æ—Å—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É, —Å–ª–æ–º–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
"""

#
# –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
#

# –ö–æ—Ä—Ç–µ–∂–∏

var
  –¥–∏—Ç—è: tuple[–∏–º—è: string, –≤–æ–∑—Ä–∞—Å—Ç: int]             # –ö–æ—Ä—Ç–µ–∂–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç *–∫–∞–∫* –∏–º—è –ø–æ–ª—è
  —Å–µ–≥–æ–¥–Ω—è: tuple[—Å–æ–ª–Ω—Ü–µ: string, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: float] # —Ç–∞–∫ *–∏* –ø–æ—Ä—è–¥–æ–∫ –ø–æ–ª–µ–π.

–¥–∏—Ç—è = (–∏–º—è: "Rudiger", –≤–æ–∑—Ä–∞—Å—Ç: 2) # –ü—Ä–∏—Å–≤–æ–∏—Ç—å –≤—Å–µ —Å—Ä–∞–∑—É –ª–∏—Ç–µ—Ä–∞–ª–æ–º ()
—Å–µ–≥–æ–¥–Ω—è.—Å–æ–ª–Ω—Ü–µ = "–ü–∞—Å–º—É—Ä–Ω–æ"         # –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –ø–æ –ø–æ–ª—è–º.
—Å–µ–≥–æ–¥–Ω—è.—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ = 20.1

# –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

var
  –Ω–∞–ø–∏—Ç–∫–∏: seq[string]

–Ω–∞–ø–∏—Ç–∫–∏ = @["–í–æ–¥–∞", "–°–æ–∫", "–ö–∞–∫–∞–æ"] # @[V1,..,Vn] —è–≤–ª—è–µ—Ç—Å—è –ª–∏—Ç–µ—Ä–∞–ª–æ–º
                                    # –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

–Ω–∞–ø–∏—Ç–∫–∏.add("–ú–æ–ª–æ–∫–æ")

if "–ú–æ–ª–æ–∫–æ" in –Ω–∞–ø–∏—Ç–∫–∏:
  echo "–£ –Ω–∞—Å —Ç—É—Ç –ú–æ–ª–æ–∫–æ –∏ –µ—â—ë", –Ω–∞–ø–∏—Ç–∫–∏.len - 1, " –Ω–∞–ø–∏—Ç–æ–∫(–æ–≤)"

let –º–æ–π–ù–∞–ø–∏—Ç–æ–∫ = –Ω–∞–ø–∏—Ç–∫–∏[2]

#
# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
#

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∞—Å.
# –≠—Ç–æ —Ç–æ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é –º–æ—â–Ω–æ–π –∏ –ø–æ–ª–µ–∑–Ω–æ–π.

type
  –ò–º—è = string      # –ü—Å–µ–≤–¥–æ–Ω–∏–º —Ç–∏–ø–∞ –¥–∞–µ—Ç –≤–∞–º –Ω–æ–≤—ã–π —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–µ–Ω
  –í–æ–∑—Ä–∞—Å—Ç = int     # —Å—Ç–∞—Ä–æ–º—É —Ç–∏–ø—É, –Ω–æ –±–æ–ª–µ–µ –Ω–∞–≥–ª—è–¥–µ–Ω.
  –ß–µ–ª–æ–≤–µ–∫ = tuple[–∏–º—è: –ò–º—è, –≤–æ–∑—Ä–∞—Å—Ç: –í–æ–∑—Ä–∞—Å—Ç] # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö.
  –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π–°–∏–Ω—Ç–∞–∫—Å–∏—Å = tuple
    fieldOne: string
    secondField: int

var
  –¥–∂–æ–Ω: –ß–µ–ª–æ–≤–µ–∫ = (–∏–º—è: "John B.", –≤–æ–∑—Ä–∞—Å—Ç: 17)
  –Ω–æ–≤—ã–π–í–æ–∑—Ä–∞—Å—Ç: int = 18 # –ë—ã–ª–æ –±—ã –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –í–æ–∑—Ä–∞—Å—Ç, —á–µ–º int

–¥–∂–æ–Ω.–≤–æ–∑—Ä–∞—Å—Ç = –Ω–æ–≤—ã–π–í–æ–∑—Ä–∞—Å—Ç # –ù–æ —ç—Ç–æ –≤—Å–µ –∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ int –∏ –í–æ–∑—Ä–∞—Å—Ç —Å–∏–Ω–æ–Ω–∏–º—ã.

type
  –ù–∞–ª = distinct int          # `distinct` –¥–µ–ª–∞–µ—Ç –Ω–æ–≤—ã–π —Ç–∏–ø –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º —Å –µ–≥–æ
  –û–ø–∏—Å–∞–Ω–∏–µ = distinct string  # –±–∞–∑–æ–≤—ã–º —Ç–∏–ø–æ–º.

var
  money: –ù–∞–ª = 100.–ù–∞–ª   # `.–ù–∞–ª` –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç int –≤ –Ω–∞—à —Ç–∏–ø
  –æ–ø–∏—Å–∞–Ω–∏–µ: –û–ø–∏—Å–∞–Ω–∏–µ  = "Interesting".–û–ø–∏—Å–∞–Ω–∏–µ

when –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å–ü–ª–æ—Ö–æ–π–ö–æ–¥:
  –¥–∂–æ–Ω.–≤–æ–∑—Ä–∞—Å—Ç  = money       # Error! –≤–æ–∑—Ä–∞—Å—Ç is of type int and money is –ù–∞–ª
  –¥–∂–æ–Ω.–∏–º—è = –æ–ø–∏—Å–∞–Ω–∏–µ         # –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –≥–æ–≤–æ—Ä–∏—Ç: "–ù–µ–ª—å–∑—è!"

#
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–∏–ø—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
#

# –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç —Ç–∏–ø—É –∏–º–µ—Ç—å –æ–¥–Ω–æ –∏–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–π

type
  –¶–≤–µ—Ç = enum —Ü–ö—Ä–∞—Å–Ω—ã–π, —Ü–ì–æ–ª—É–±–æ–π, —Ü–ó–µ–ª–µ–Ω—ã–π
  –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ = enum  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    –Ω–°–µ–≤–µ—Ä
    –Ω–ó–∞–ø–∞–¥
    –Ω–í–æ—Å—Ç–æ–∫
    –Ω–Æ–≥
var
  –Ω–∞–ø—Ä = –Ω–°–µ–≤–µ—Ä     # `–Ω–∞–ø—Ä` –∏–º–µ–µ—Ç —Ç–∏–ø –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º `–Ω–°–µ–≤–µ—Ä`
  —Ç–æ—á–∫–∞ = —Ü–ó–µ–ª–µ–Ω—ã–π  # `—Ç–æ—á–∫–∞` –∏–º–µ–µ—Ç —Ç–∏–ø –¶–≤–µ—Ç, —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º `—Ü–ó–µ–ª–µ–Ω—ã–π`

discard –Ω–°–µ–≤–µ—Ä > –Ω–í–æ—Å—Ç–æ–∫  # –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –æ–±—ã—á–Ω–æ —è–≤–ª—è—é—Ç—Å—è "–ø–æ—Ä—è–¥–∫–æ–≤—ã–º–∏" —Ç–∏–ø–∞–º–∏

# –ü–æ–¥–¥–∏–∞–ø–∞–∑–æ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω

type
  –ö–æ—Å—Ç–∏ = range[1..20]  # üé≤ –î–æ–ø—É—Å—Ç–∏–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º —è–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ int –æ—Ç 1 –¥–æ 20
var
  –º–æ–π_–±—Ä–æ—Å–æ–∫: –ö–æ—Å—Ç–∏ = 13

when –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å–ü–ª–æ—Ö–æ–π–ö–æ–¥:
  –º–æ–π_–±—Ä–æ—Å–æ–∫ = 23  # Error!

# –ú–∞—Å—Å–∏–≤—ã

type
  –°—á–µ—Ç—á–∏–∫–ë—Ä–æ—Å–∫–æ–≤ = array[–ö–æ—Å—Ç–∏, int]             # –ú–∞—Å—Å–∏–≤—ã —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã –∏
  –ò–º–µ–Ω–∞–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π = array[–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, string]  # –∏–Ω–¥–µ–∫—Å–∏—Ä—É—é—Ç—Å—è –ª—é–±—ã–º –ø–æ—Ä—è–¥–∫–æ–≤—ã–º —Ç–∏–ø–æ–º.
  –ò—Å—Ç–∏–Ω—ã = array[42..44, bool]
var
  —Å—á–µ—Ç—á–∏–∫: –°—á–µ—Ç—á–∏–∫–ë—Ä–æ—Å–∫–æ–≤
  –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –ò–º–µ–Ω–∞–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
  –≤–æ–∑–º–æ–∂–Ω—ã: –ò—Å—Ç–∏–Ω—ã

–≤–æ–∑–º–æ–∂–Ω—ã = [false, false, false]  # –ú–∞—Å—Å–∏–≤—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –ª–∏—Ç–µ—Ä–∞–ª–æ–º [V1,..,Vn]
–≤–æ–∑–º–æ–∂–Ω—ã[42] = true

–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è[–Ω–°–µ–≤–µ—Ä] = "–û–û. –í–µ–ª–∏–∫–∏–π –±–µ–ª—ã–π –°–µ–≤–µ—Ä!"
–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è[–Ω–ó–∞–ø–∞–¥] = "–ù–µ—Ç, –Ω–µ –∏–¥–∏ —Ç—É–¥–∞."

–º–æ–π_–±—Ä–æ—Å–æ–∫ = 13
—Å—á–µ—Ç—á–∏–∫[–º–æ–π_–±—Ä–æ—Å–æ–∫] += 1
—Å—á–µ—Ç—á–∏–∫[–º–æ–π_–±—Ä–æ—Å–æ–∫] += 1

var –µ—â–µ–ú–∞—Å—Å–∏–≤ = ["–ò–¥–µ–∫—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", "–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å", "0"]

# –î–æ—Å—Ç—É–ø–Ω—ã –¥—Ä—É–≥–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Ç–∞–±–ª–∏—Ü—ã, –º–Ω–æ–∂–µ—Å—Ç–≤–∞,
# —Å–ø–∏—Å–∫–∏, –æ—á–µ—Ä–µ–¥–∏ –∏ crit-bit –¥–µ—Ä–µ–≤—å—è.
# http://nim-lang.org/docs/lib.html#collections-and-algorithms (EN)

#
# IO –∏ –ø–æ—Ç–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
#

# `case`, `readLine()`

echo "–ß–∏—Ç–∞–ª–∏ –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å —Ö–æ—Ä–æ—à–∏–µ –∫–Ω–∏–≥–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è?"

case readLine(stdin)
of "–Ω–µ—Ç", "–ù–µ—Ç":
  echo "–ü–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ—é –º–µ—Å—Ç–Ω—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É."
of "–¥–∞", "–î–∞":
  echo "–¢–æ–≥–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏–º"
else:
  echo "–ó–¥–æ—Ä–æ–≤–æ!"

# `while`, `if`, `continue`, `break`

import strutils as str  # http://nim-lang.org/docs/strutils.html (EN)
echo "–Ø –∑–∞–≥–∞–¥–∞–ª–æ —á–∏—Å–ª–æ –º–µ–∂–¥—É 41 –∏ 43. –û—Ç–≥–∞–¥–∞–π!"
let —á–∏—Å–ª–æ: int = 42
var
  –≤–≤–æ–¥_–¥–æ–≥–∞–¥–∫–∞: string
  –¥–æ–≥–∞–¥–∫–∞: int

while –¥–æ–≥–∞–¥–∫–∞ != —á–∏—Å–ª–æ:
  –≤–≤–æ–¥_–¥–æ–≥–∞–¥–∫–∞ = readLine(stdin)

  if –≤–≤–æ–¥_–¥–æ–≥–∞–¥–∫–∞ == "": continue  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç—É –∏—Ç–µ—Ä–∞—Ü–∏—é
  
  –¥–æ–≥–∞–¥–∫–∞ = str.parseInt(–≤–≤–æ–¥_–¥–æ–≥–∞–¥–∫–∞)

  if –¥–æ–≥–∞–¥–∫–∞ == 1001:
    echo("AAAAAAGGG!")
    break
  elif –¥–æ–≥–∞–¥–∫–∞ > —á–∏—Å–ª–æ:
    echo("–ù–µ–∞. –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ.")
  elif –¥–æ–≥–∞–¥–∫–∞ < —á–∏—Å–ª–æ:
    echo(–¥–æ–≥–∞–¥–∫–∞, " —ç—Ç–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ")
  else:
    echo("–¢–æ—á–Ω–æ–æ–æ–æ–æ!")

#
# –ò—Ç–µ—Ä–∞—Ü–∏–∏ (—Ü–∏–∫–ª—ã)
#

for i, —ç–ª–µ–º in ["–î–∞", "–ù–µ—Ç", "–ú–æ–∂–µ—Ç –±—ã—Ç—å"]:  # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ `for —ç–ª–µ–º in`
  echo(—ç–ª–µ–º, " –ø–æ –∏–Ω–¥–µ–∫—Å—É: ", i)

for –∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ in items(@[(—á–µ–ª–æ–≤–µ–∫: "You", —Å–∏–ª–∞: 100), (—á–µ–ª–æ–≤–µ–∫: "Me", —Å–∏–ª–∞: 9000)]):
  echo –∑–Ω–∞—á–µ–Ω–∏–µ

let –º–æ—è–°—Ç—Ä–æ–∫–∞ = """
<–ø—Ä–∏–º–µ—Ä>
`—Å—Ç—Ä–æ–∫–∏` –¥–ª—è
—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
""" # –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è "—Å—ã—Ä–∞—è" —Å—Ç—Ä–æ–∫–∞

for —Å—Ç—Ä–æ–∫–∞ in splitLines(–º–æ—è–°—Ç—Ä–æ–∫–∞):
  echo(—Å—Ç—Ä–æ–∫–∞)

for i, —Å–∏–º–≤ in –º–æ—è–°—Ç—Ä–æ–∫–∞:     # –ò–Ω–¥–µ–∫—Å –∏ —Å–∏–º–≤–æ–ª. –ò–ª–∏ `for j in` —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∏–º–≤–æ–ª–æ–≤
  if i mod 2 == 0: continue   # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞ `if`
  elif —Å–∏–º–≤ == 'X': break
  else: echo(—Å–∏–º–≤)

#
# –ü—Ä–æ—Ü–µ–¥—É—Ä—ã
#

type –û—Ç–≤–µ—Ç = enum –æ–î–∞, –æ–ù–µ—Ç

proc —Å–ø—Ä–æ—Å(–≤–æ–ø—Ä–æ—Å: string): –û—Ç–≤–µ—Ç =
  echo(–≤–æ–ø—Ä–æ—Å, " (–¥/–Ω)")
  while true:
    case readLine(stdin)
    of "–¥", "–î", "–¥–∞", "–î–∞":
      return –û—Ç–≤–µ—Ç.–æ–î–∞  # –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã
    of "–Ω", "–ù", "–Ω–µ—Ç", "–ù–µ—Ç":
      return –û—Ç–≤–µ—Ç.–æ–ù–µ—Ç
    else: echo("–ü–æ—Ç–æ—á–Ω–µ–µ, –¥–∞ –∏–ª–∏ –Ω–µ—Ç")

proc –¥–æ–±–∞–≤—å–°–∞—Ö–∞—Ä(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: int = 2) =   # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2, –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
  assert(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ > 0 and –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ < 9000, "–î–∏–∞–±–µ—Ç ‚ò†")
  for a in 1..–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:
    echo(a, " –∫—É–±–∏–∫...")

case —Å–ø—Ä–æ—Å("–°–∞—Ö–∞—Ä–∫—É?")
of –æ–î–∞:
  –¥–æ–±–∞–≤—å–°–∞—Ö–∞—Ä(3)
of –æ–ù–µ—Ç:
  echo "–ù—É –Ω–µ–º–Ω–æ–æ–æ–∂–∫–æ!"
  –¥–æ–±–∞–≤—å–°–∞—Ö–∞—Ä()
# –ó–¥–µ—Å—å –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ `else`. –í–æ–∑–º–æ–∂–Ω—ã —Ç–æ–ª—å–∫–æ `–¥–∞` –∏ `–Ω–µ—Ç`.

#
# FFI (–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–Ω–µ—à–Ω–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π)
#

# –¢–∞–∫ –∫–∞–∫ Nim –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ C, —Ç–æ FFI –¥–µ–ª–∞–µ—Ç—Å—è –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:

proc strcmp(a, b: cstring): cint {.importc: "strcmp", nodecl.}

let cmp = strcmp("C?", "–õ–µ–≥–∫–æ!")
```

–ö—Ä–æ–º–µ —Ç–æ–≥–æ, Nim –≤—ã–¥–µ–ª—è–µ—Ç—Å—è —Å—Ä–µ–¥–∏ —Å–µ–±–µ –ø–æ–¥–æ–±–Ω—ã—Ö –º–µ—Ç–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º,
–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é, —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —ç—Ç–∞–ø–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

## –î–∞–ª—å–Ω–µ–π—à–µ–µ —á—Ç–µ–Ω–∏–µ (EN)

* [–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞](http://nim-lang.org)
* [–°–∫–∞—á–∞—Ç—å](http://nim-lang.org/download.html)
* [–°–æ–æ–±—â–µ—Å—Ç–≤–æ](http://nim-lang.org/community.html)
* [FAQ](http://nim-lang.org/question.html)
* [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](http://nim-lang.org/documentation.html)
* [–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ](http://nim-lang.org/docs/manual.html)
* [–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞](http://nim-lang.org/docs/lib.html)
* [Rosetta Code](http://rosettacode.org/wiki/Category:Nim)
