---
category: tool
tool: vim
contributors:
    - ["RadhikaG", "https://github.com/RadhikaG"]
translators:
    - ["ShaltaevGleb", "https://github.com/ShaltaevGleb"]
filename: LearnVim-Ru.txt
lang: ru-ru
---


[Vim](www.vim.org)
(Vi IMproved - Vi усовершенствованный) является клоном популярного в UNIX редактора vi. Данный текстовый редактор разрабатывался быстрой работы с высокой продуктивностью, сейчас его можно встретить во всех UNIX системах. Для быстрой навигации и редактирования используется множество клавиатурных команд.

## Базовая навигация Vim

```
    vim <filename>   # Открытие <filename> в vim
    :q               # Закрытие vim
    :w               # Сохранение рабочего файла
    :wq              # Сохранение файла и закрытие vim
    :q!              # Закрытие vim без сохранения
                     # ! *усилитель* :q для закрытия, следовательно закроется без сохранения (без ! будет спрашивать, что делать с изменениями)
    :x               # Сохранение и закрытие, сокращенная версия :wq

    u                # Отмена последнего действия
    CTRL+R           # Повтор последнего действия

    h                # Сдвинуться влево на 1 символ
    j                # Сместиться на 1 строку вниз
    k                # Подняться на 1 строку
    l                # Сдвинуться вправо на 1 символ

    # Навигация в строке

    0                # В начало строки
    $                # В конец строки
    ^                # На позицию первого не пустого символа строки

    # Поиск в тексте

    /слово           # Поиск всех вхождений слова после курсора
    ?слово           # Поиск всех вхождений слова до курсора
    n                # Переместить курсор к следующему вхождению
    N                # Переместить курсор к прошлому вхождению

    :%s/foo/bar/g    # Замена 'foo' на 'bar' во всем файле
    :s/foo/bar/g     # Замена 'foo' на 'bar' в данной строке

    # Перемещение к символу

    f<character>     # Перемещение вперед и курсор на <character>
    t<character>     # Перемещение вперед и курсор перед <character> 

    # Пример,    
    f<               # Прыжок вперед и курсор на <
    t<               # Прыжок вперед и курсор перед <
    
    # Перемещения по словам

    w                # Перемещение на 1 слово вперед
    b                # Перемещение на 1 слово назад
    e                # Переместиться к конце данного слова

    # Остальные сокращения навигации

    gg               # Перейти к началу файла
    G                # Перейти к концу файла
    :NUM             # Перейти к строке NUM (NUM при этом любое число)
    H                # Перейти к верху экрана
    M                # Перейти к центру экрана
    L                # Перейти к концу экрана
```

## Режимы MOSES:

Основная концепция работы VIM: Режимы **modes**.

  - Коммандный режим - vim запускается в этом режиме, используется для навигации и ввода команд
  - Режим вставки  - используется для внесения правок
  - Визуальный режим  - используется для выделения текста и операций над выделениями
  - Ex Mode      - используется для ввода команд ':'

```
    i                # Переключает vim в режим вставки, до позиции курсора
    a                # Переключает vim в режим вставки, после позиции курсора
    v                # Переключает vim в визуальный режим
    :                # Переключает vim в ex режим
    <esc>            # 'Escapes' переводит в командный режим

    # Манипуляции с текстов в командном режиме

    y                # Копирует выделение
    yy               # Копирует текущую строку
    d                # Удаляет выделение
    dd               # Удаляет выделенную строку
    p                # Вставляет текст после текущей позиции курсора
    P                # Вставляет текст до текущей позиции курсора
    x                # Удаляет символ под курсором
```

## 'Грамматика' VIM

Vim может понимать команды в формате
'Глагол-Модификатор-Существительное', где:

  - Глагол          - желаемое действие
  - Модификатор     - модификация действия 
  - Существительное - объект действия

Несколько основных 'Глаголов', 'Модификаторов', и 'Существительных':

```
    # 'Verbs'
 
    d                # Удалить
    c                # Изменить
    y                # Копировать
    v                # Выделить

    # 'Модификаторы'

    i                # Внутри
    a                # Вокруг
    NUM              # Повторить Глагол-Существительное (NUM - количество раз)
    f                # Найти что-либо и остановиться на этом
    t                # Найти что-либо и остановиться перед этим
    /                # Найти строку после курсора
    ?                # Найти строку до курсора

    # 'Существительные'

    w                # Слово
    s                # Предложение
    p                # Параграф
    b                # Блок
    
    # Простые составные команды

    d2w              # Удалить 2 слова
    cis              # Изменить в предложении
    yip              # Копировать внутри параграфа
                     # (копирует параграф в которов вы находитесь)
    ct<              # Изменить до <
                     # Изменить текст до следующей <
    d$               # Удалить до конца строки
```

## Некоторые сокращения и трюки

        <!--TODO: Добавить больше!-->
```
    >                # Сместить выделенное на 1 блок вперед
    <                # Сместить выделенное на 1 блок назад
    :earlier 15m     # Вернуться к состоянию документа 15 минут назад
    :later 15m       # Отменить ^^^ команду
    .                # Повторить предыдущее действие
```

## Макросы

Макросы - это записываемые действия
Когда вы начали запись, то записано будет **каждое** используемая команда и действие, до тех пор пока запись не будет остановлена. При вызове макроса, будут выполнена точная копия действий в месте вызова.

```
    qa               # Старт записи макроса 'a'
    q                # Прекращение записи
    @a               # Вызов макроса 'a'
```

### Настройка Vim ~/.vimrc

Файл .vimrc при его наличии, каждый запуск настраивает ваш редактор.

Вот простой пример конфигурации ~/.vimrc:

```
" Пример ~/.vimrc
" 2015.10 

" Убирает совместимость с vi
set nocompatible

" Включает изменение поведения в зависимости от типа файла.
filetype indent plugin on

" Включает подсветку синтаксиса
syntax on

" Упрощает для пользователя командный режим
set wildmenu

" Работа с переносом сроки
set autoindent

" Отображение номера строки слева
set number

" Величина отступа при визуализации TAB
set tabstop=4

" Количество пробелов в TAB
set softtabstop=4

" Число пробелов в отступах (>> и <<) при использовании
set shiftwidth=4

" Вместо TAB использовать пробелы
set expandtab

" Автоматический отступ в новой строке
set smarttab
```

### Полезные ссылки
En:

[Vim | Home](http://www.vim.org/index.php)

`$ vimtutor` Полезный встроенный в vim краткий учебник

[Руководства и примеры](https://danielmiessler.com/study/vim/)

[What are the dark corners of Vim your mom never told you about? (Stack Overflow thread)](http://stackoverflow.com/questions/726894/what-are-the-dark-corners-of-vim-your-mom-never-told-you-about)

[Arch Linux Wiki](https://wiki.archlinux.org/index.php/Vim)
